var blockly_mario;(function(){function t(){var t='"'+this.getTitleValue("VALUE")+'"';return[t,Blockly.JavaScript.ORDER_ATOMIC]}function e(t,e,i){return Blockly.JavaScript.valueToCode(t,e,i)}Blockly.Language.agent_act={init:function(){this.setColour(290),this.appendValueInput("ACTION").appendTitle("activate"),this.setPreviousStatement(!0),this.setNextStatement(!0),this.setTooltip("Activate or keep active the given action. Actions otherwise deactivate at each time step.\n\nTo actually jump or shoot more than once, it must be inactive between.")}},Blockly.Language.agent_action={init:function(){this.setColour(160),this.appendDummyInput().appendTitle(new Blockly.FieldDropdown([["jump","JUMP"],["shoot","SHOOT"],["left","LEFT"],["right","RIGHT"],["up","UP"],["down","DOWN"]]),"VALUE"),this.setOutput(!0,String),this.setTooltip("Choose an action. Jump also starts levels. Shoot also runs faster.")}},Blockly.Language.agent_enemies={init:function(){this.setColour(210),this.appendDummyInput().appendTitle("enemies"),this.setOutput(!0,Array),this.setTooltip("A list of all active enemies.")}},Blockly.Language.agent_enemyTypeOption={init:function(){this.setColour(160),this.appendDummyInput().appendTitle(new Blockly.FieldDropdown([["bullet bill","BULLET_BILL"],["goomba (mushroom)","GOOMBA"],["green koopa (turtle)","GREEN_KOOPA"],["piranha plant","PIRANHA_PLANT"],["red koopa (turtle)","RED_KOOPA"],["spiny (turtle)","SPINY"]]),"VALUE"),this.setOutput(!0,String),this.setTooltip("Choose from the list of possible enemy types.")}},Blockly.Language.agent_mario={init:function(){this.setColour(0),this.appendDummyInput().appendTitle("mario"),this.setOutput(!0,"Sprite"),this.setTooltip("Mario player character.")}},Blockly.Language.agent_mode={init:function(){this.setColour(120),this.appendDummyInput().appendTitle("game mode is").appendTitle(new Blockly.FieldDropdown([["level","LEVEL"],["map","MAP"],["title","TITLE"],["lose","LOSE"],["win","WIN"]]),"MODE"),this.setOutput(!0,Boolean),this.setTooltip("Test the current game mode (screen type).")}},Blockly.Language.agent_onGround={init:function(){this.setColour(120),this.appendDummyInput().appendTitle("on ground"),this.setOutput(!0,Boolean),this.setTooltip("On ground after last time step or not.")}},Blockly.Language.agent_spriteType={init:function(){this.setColour(160),this.appendValueInput("SPRITE").setCheck("Sprite").appendTitle("type of"),this.setOutput(!0,String),this.setTooltip("The type identifier of any character or block.")}},Blockly.Language.agent_tileSize={init:function(){this.setColour(230),this.appendDummyInput().appendTitle("tile").appendTitle(new Blockly.FieldDropdown([["radius","RADIUS"],["size","SIZE"]]),"VALUE"),this.setOutput(!0,Number),this.setTooltip('The tile "radius" or full size (edge length).')}},Blockly.Language.agent_tileTypeAt={init:function(){this.setColour(160),this.appendValueInput("X").setCheck(Number).appendTitle("tile type at x"),this.appendValueInput("Y").setCheck(Number).appendTitle("y"),this.setInputsInline(!0),this.setOutput(!0,String),this.setTooltip("Tile type at pixel offset (x, y) from Mario's center.")}},Blockly.Language.agent_tileTypeOption={init:function(){this.setColour(160),this.appendDummyInput().appendTitle(new Blockly.FieldDropdown([["air","AIR"],["brick","BRICK"],["off screen","OFF_SCREEN"],["pipe","PIPE"],["question","QUESTION"],["solid","SOLID"],["surface (top only)","SURFACE"]]),"VALUE"),this.setOutput(!0,String),this.setTooltip("Choose from the list of possible tile types.")}},Blockly.Language.agent_value={init:function(){this.setColour(230),this.appendValueInput("SPRITE"),this.appendDummyInput().appendTitle(new Blockly.FieldDropdown([["offset x","OFFSET_X"],["offset y","OFFSET_Y"],["position x","POSITION_X"],["position y","POSITION_Y"],["radius x","RADIUS_X"],["radius y","RADIUS_Y"],["velocity x","VELOCITY_X"],["velocity y","VELOCITY_Y"]]),"VALUE"),this.setInputsInline(!0),this.setOutput(!0,Number),this.setTooltip("Get the requested value for the given animated character.\nPositions are refer to center points, where right is +X and up is +Y.\nMario's origin is the bottom middle of the screen, and all other characters are relative to Mario.\nOffset is from tile center.")}},Blockly.JavaScript.agent_act=function(){var t=e(this,"ACTION",Blockly.JavaScript.ORDER_NONE),i=["$$actions[",t,"] = true;\n"].join("");return i},Blockly.JavaScript.agent_action=t,Blockly.JavaScript.agent_enemies=function(){return["$$support.enemies()",Blockly.JavaScript.ORDER_MEMBER]},Blockly.JavaScript.agent_enemyTypeOption=t,Blockly.JavaScript.agent_mario=function(){return["Mario.MarioCharacter",Blockly.JavaScript.ORDER_MEMBER]},Blockly.JavaScript.agent_mode=function(){var t={LEVEL:"Mario.LevelState",LOSE:"Mario.LoseState",MAP:"Mario.MapState",TITLE:"Mario.TitleState",WIN:"Mario.WinState"}[this.getTitleValue("MODE")],e="$$support.gameStateIs("+t+")";return[e,Blockly.JavaScript.ORDER_MEMBER]},Blockly.JavaScript.agent_onGround=function(){var t="Mario.MarioCharacter.OnGround";return[t,Blockly.JavaScript.ORDER_MEMBER]},Blockly.JavaScript.agent_spriteType=function(){var t=e(this,"SPRITE",Blockly.JavaScript.ORDER_NONE),i=["$$support.spriteType(",t,")"].join("");return[i,Blockly.JavaScript.ORDER_MEMBER]},Blockly.JavaScript.agent_tileSize=function(){var t=this.getTitleValue("VALUE"),e=["$$support.tileSize('",t,"')"].join("");return[e,Blockly.JavaScript.ORDER_MEMBER]},Blockly.JavaScript.agent_tileTypeAt=function(){var t=e(this,"X",Blockly.JavaScript.ORDER_COMMA),i=e(this,"Y",Blockly.JavaScript.ORDER_COMMA),a=["$$support.tileTypeAt(",t,", ",i,")"].join("");return[a,Blockly.JavaScript.ORDER_MEMBER]},Blockly.JavaScript.agent_tileTypeOption=t,Blockly.JavaScript.agent_value=function(){var t=e(this,"SPRITE",Blockly.JavaScript.ORDER_COMMA),i=this.getTitleValue("VALUE"),a=["$$support.spriteValue(",t,", '",i,"')"].join("");return[a,Blockly.JavaScript.ORDER_MEMBER]},Blockly.JavaScript.text_print=function(){var t=e(this,"TEXT",Blockly.JavaScript.ORDER_NONE)||'""';return"console.log("+t+");\n"}})(blockly_mario||(blockly_mario={}));var blockly_mario;(function(t){var e={X:160,Y:120},i=16,a=function(){function t(t){this.app=t}return t.prototype.enemies=function(){if(!this.gameStateIs(Mario.LevelState))return[];var t=this.gameState().Sprites.Objects.filter(function(t){return t instanceof Mario.Enemy||t instanceof Mario.BulletBill||Boolean(t instanceof Mario.Shell&&t.Facing)});return t},t.prototype.gameState=function(){return this.app.stateContext.State},t.prototype.gameStateIs=function(t){return this.gameState()instanceof t},t.prototype.spriteType=function(t){if(t instanceof Mario.BulletBill)return"BULLET_BILL";if(t instanceof Mario.Character)return"MARIO";if(t instanceof Mario.FlowerEnemy)return"PIRANHA_PLANT";if(t instanceof Mario.Enemy)switch(t.Type){case Mario.Enemy.Goomba:return"GOOMBA";case Mario.Enemy.GreenKoopa:return"GREEN_KOOPA";case Mario.Enemy.RedKoopa:return"RED_KOOPA";case Mario.Enemy.Spiky:return"SPINY"}return"UNKNOWN"},t.prototype.spriteValue=function(t,e){var i=e.split(/_+/),a=i[0],o=i[i.length-1];switch(a){case"OFFSET":return this.getOffset(t,o);case"POSITION":return this.getPosition(t,o);case"RADIUS":return this.getRadius(t,o);case"VELOCITY":return this.getVelocity(t,o)}},t.prototype.tileSize=function(t){var e=i;return"RADIUS"==t&&(e/=2),e},t.prototype.tileTypeAt=function(t,e){var a=this.gameState();if(a instanceof Mario.LevelState){var o=Mario.MarioCharacter;e*=-1,t+=o.X,e+=o.Y,e-=o.Height/2,t=Math.floor(t/i),e=Math.floor(e/i);var n=a.Level;if(0>t||0>e||t>=n.Width||e>=n.Height)return"OFF_SCREEN";var r=n.Map[t][e];switch(r){case 0:return"AIR";case 10:case 11:case 26:case 27:return"PIPE";case 16:case 17:case 18:case 19:return"BRICK";case 20:case 21:case 22:case 23:return"QUESTION";case 32:case 33:case 34:case 35:return"COIN";case 4:case 5:case 6:case 7:case 9:case 12:case 28:case 131:case 145:case 147:return"SOLID"}if(r>=128){var l=Mario.Tile.Behaviors[r];switch(l){case 0:return"AIR";case Mario.Tile.BlockAll:return"SOLID";case Mario.Tile.BlockUpper:return"SURFACE"}}console.log("Unknown type: "+r)}else a instanceof Mario.MapState;return"UNKNOWN"},t.prototype.getOffset=function(t,a){var o=this.gameState();if(o instanceof Mario.LevelState){var n=t[a];return"Y"==a&&(n*=-1,n+=2*e.Y,n+=t.Height/2-1),n%=i,n-=i/2}return Number.NaN},t.prototype.getPosition=function(t,i){var a,o=Mario.MarioCharacter,n=this.gameState();return n instanceof Mario.LevelState?(t===o?(a=o[i],"X"==i&&(a-=n.Camera.X),a-={X:e.X,Y:2*e.Y}[i]):a=t[i]-o[i],"Y"==i&&(a-=t.Height/2)):n instanceof Mario.MapState?t===o&&(a=n[i+"Mario"],"Y"==i&&(a-=2*e[i]),a+=8):a=Number.NaN,"Y"===i&&(a*=-1),a},t.prototype.getRadius=function(t,e){try{return"X"==e?t.Width:t.Height/2}catch(i){return Number.NaN}},t.prototype.getVelocity=function(t,e){var i;return i=this.gameStateIs(Mario.LevelState)?t[e+"a"]:Number.NaN,"Y"===e&&(i*=-1),i},t}();t.Support=a})(blockly_mario||(blockly_mario={}));var blockly_mario;(function(blockly_mario){function $(t){return document.getElementById(t)}function $input(t){return $(t)}function copySimpleShallow(t){var e={};for(var i in t)e[i]=t[i];return e}function defineFinishCode(t){return function(e){return t(["var $$actions;","return function() {","$$actions = {};",e,"return $$actions;","};"].join("\n"))}}function defineKeyDown(t){return function(e){if(this.IsActive()&&32==e.keyCode){var i=$input("pause");i.checked=!i.checked,handlePause()}else t.call(this,e)}}function handlePause(){$input("pause").checked?blockly_mario.app.timer.Stop():blockly_mario.app.timer.Start()}function redefine(t,e,i){t[e]=i(t[e])}function storageName(t){return window.location.href.split("#")[0]+"#"+t}function updateCode(){var code=Blockly.Generator.workspaceToCode("JavaScript");code=["(function($$support) {",code,"})"].join("\n");try{aiFunction=eval(code)(new blockly_mario.Support(blockly_mario.app)),$input("ai").disabled=!1,$input("update").disabled=!0}catch(e){throw alert("Error building code."),aiFunction=null,$input("ai").checked=!1,$input("ai").disabled=!0,e}}function workspaceChanged(){$("update").disabled=!1;var t=Blockly.Xml.domToText(Blockly.Xml.workspaceToDom(Blockly.mainWorkspace));window.localStorage.setItem(storageName("blocks"),t)}var aiFunction;blockly_mario.app,window.onload=function(){blockly_mario.app=new Enjine.Application,blockly_mario.app.Initialize(new Mario.LoadingState("../mariohtml5/"),320,240),blockly_mario.app.timer.UpdateObject=new AiUpdate(blockly_mario.app),redefine(Enjine.KeyboardInput,"KeyDownEvent",defineKeyDown),Blockly.inject($("blockly"),{path:"../blockly/",toolbox:$("toolbox")}),redefine(Blockly.JavaScript,"finish",defineFinishCode),Blockly.addChangeListener(workspaceChanged),$("ai").onclick=function(){$input("ai").checked||$("canvas").focus()},$input("pause").checked=!1,$("pause").onclick=handlePause,$("update").onclick=updateCode;var t=localStorage.getItem(storageName("blocks"));if(t){var e=Blockly.Xml.textToDom(t);Blockly.Xml.domToWorkspace(Blockly.mainWorkspace,e)}setTimeout(function(){updateCode()},0)};var AiUpdate=function(){function t(t){this.base=t}return t.prototype.Update=function(t){var e,i=$input("ai").checked&&Boolean(aiFunction);if(i){var a=aiFunction(),o={},n={DOWN:"Down",LEFT:"Left",JUMP:"S",RIGHT:"Right",SHOOT:"A",UP:"Up"};for(var r in a)a[r]&&(o[Enjine.Keys[n[r]]]=!0);e=Enjine.KeyboardInput.Pressed,Enjine.KeyboardInput.Pressed=o,Enjine.KeyboardInput.Element=null}this.base.Update(t),i&&(Enjine.KeyboardInput.Pressed=e,Enjine.KeyboardInput.Element=$("canvas"))},t}()})(blockly_mario||(blockly_mario={}));